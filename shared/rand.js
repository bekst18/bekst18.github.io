/**
 * choose a uniform random integer from interval [min, max)
 * @param min
 * @param max
 */
export function int(min, max) {
    const range = max - min;
    return Math.floor(Math.random() * range + min);
}
/**
 * choose a random element from the specified array
 * @param list array-like object to select a random element from
 */
export function choose(a) {
    const idx = int(0, a.length);
    return a[idx];
}
/**
 * randomly shuffle the specified array
 * @param a array to shuffle
 */
export function shuffle(a) {
    for (let i = a.length - 1; i >= 0; --i) {
        const j = Math.floor(Math.random() * i);
        const tmp = a[i];
        a[i] = a[j];
        a[j] = tmp;
    }
    return a;
}
/**
 * returns true x% of the time
 * @param x true chance
 */
export function chance(x) {
    return Math.random() < x;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInJhbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBVyxFQUFFLEdBQVc7SUFDeEMsTUFBTSxLQUFLLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUN4QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNuRCxDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBSSxDQUFlO0lBQ3JDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQzVCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2xCLENBQUM7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsT0FBTyxDQUFJLENBQVc7SUFDbEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1FBQ3BDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1osQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNkO0lBRUQsT0FBTyxDQUFDLENBQUM7QUFDYixDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBQyxDQUFTO0lBQzVCLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQTtBQUM1QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIGNob29zZSBhIHVuaWZvcm0gcmFuZG9tIGludGVnZXIgZnJvbSBpbnRlcnZhbCBbbWluLCBtYXgpXHJcbiAqIEBwYXJhbSBtaW4gXHJcbiAqIEBwYXJhbSBtYXggXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaW50KG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikge1xyXG4gICAgY29uc3QgcmFuZ2UgPSBtYXggLSBtaW47XHJcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmFuZ2UgKyBtaW4pO1xyXG59XHJcblxyXG4vKipcclxuICogY2hvb3NlIGEgcmFuZG9tIGVsZW1lbnQgZnJvbSB0aGUgc3BlY2lmaWVkIGFycmF5XHJcbiAqIEBwYXJhbSBsaXN0IGFycmF5LWxpa2Ugb2JqZWN0IHRvIHNlbGVjdCBhIHJhbmRvbSBlbGVtZW50IGZyb21cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjaG9vc2U8VD4oYTogQXJyYXlMaWtlPFQ+KSB7XHJcbiAgICBjb25zdCBpZHggPSBpbnQoMCwgYS5sZW5ndGgpXHJcbiAgICByZXR1cm4gYVtpZHhdO1xyXG59XHJcblxyXG4vKipcclxuICogcmFuZG9tbHkgc2h1ZmZsZSB0aGUgc3BlY2lmaWVkIGFycmF5XHJcbiAqIEBwYXJhbSBhIGFycmF5IHRvIHNodWZmbGVcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBzaHVmZmxlPFQ+KGE6IEFycmF5PFQ+KSB7XHJcbiAgICBmb3IgKGxldCBpID0gYS5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xyXG4gICAgICAgIGNvbnN0IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpKTtcclxuICAgICAgICBjb25zdCB0bXAgPSBhW2ldO1xyXG4gICAgICAgIGFbaV0gPSBhW2pdO1xyXG4gICAgICAgIGFbal0gPSB0bXA7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGE7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiByZXR1cm5zIHRydWUgeCUgb2YgdGhlIHRpbWVcclxuICogQHBhcmFtIHggdHJ1ZSBjaGFuY2VcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjaGFuY2UoeDogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKSA8IHhcclxufSJdfQ==