export const tileSize = 24;
export const lightRadius = 8;
export class Thing {
    constructor(options) {
        this.position = options.position;
        this.passable = options.passable;
        this.transparent = options.transparent;
        this.name = options.name;
        this.image = options.image;
        if (options.renderData) {
            this.renderData = options.renderData;
        }
    }
    clone() {
        return new Thing({
            position: this.position.clone(),
            passable: this.passable,
            transparent: this.transparent,
            name: this.name,
            image: this.image,
            renderData: Object.assign({}, this.renderData)
        });
    }
}
export class Tile extends Thing {
}
export class Fixture extends Thing {
}
export class Player extends Thing {
    constructor(options) {
        var _a;
        super(options);
        this.maxHealth = 0;
        this.health = 0;
        this.maxHealth = options.maxHealth;
        this.health = (_a = options.health) !== null && _a !== void 0 ? _a : this.maxHealth;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJybC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFBO0FBQzFCLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLENBQUE7QUFnQjVCLE1BQU0sT0FBTyxLQUFLO0lBUWQsWUFBWSxPQUFxQjtRQUM3QixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUE7UUFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFBO1FBQ2hDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQTtRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUE7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFBO1FBRTFCLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUNwQixJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUE7U0FDdkM7SUFDTCxDQUFDO0lBRUQsS0FBSztRQUNELE9BQU8sSUFBSSxLQUFLLENBQUM7WUFDYixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUU7WUFDL0IsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztZQUM3QixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7WUFDZixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsVUFBVSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDakQsQ0FBQyxDQUFBO0lBQ04sQ0FBQztDQUNKO0FBRUQsTUFBTSxPQUFPLElBQUssU0FBUSxLQUFLO0NBQUk7QUFDbkMsTUFBTSxPQUFPLE9BQVEsU0FBUSxLQUFLO0NBQUk7QUFPdEMsTUFBTSxPQUFPLE1BQU8sU0FBUSxLQUFLO0lBSTdCLFlBQVksT0FBc0I7O1FBQzlCLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUpYLGNBQVMsR0FBVyxDQUFDLENBQUE7UUFDckIsV0FBTSxHQUFXLENBQUMsQ0FBQTtRQUlyQixJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUE7UUFDbEMsSUFBSSxDQUFDLE1BQU0sU0FBRyxPQUFPLENBQUMsTUFBTSxtQ0FBSSxJQUFJLENBQUMsU0FBUyxDQUFBO0lBQ2xELENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiByb2d1ZS1saWtlIGxpYnJhcnlcclxuICovXHJcbmltcG9ydCAqIGFzIGdlbyBmcm9tIFwiLi4vc2hhcmVkL2dlbzJkXCJcclxuaW1wb3J0ICogYXMgZ2Z4IGZyb20gXCIuL2dmeC5qc1wiXHJcblxyXG5leHBvcnQgY29uc3QgdGlsZVNpemUgPSAyNFxyXG5leHBvcnQgY29uc3QgbGlnaHRSYWRpdXMgPSA4XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRoaW5nT3B0aW9ucyB7XHJcbiAgICBwb3NpdGlvbjogZ2VvLlBvaW50XHJcbiAgICBwYXNzYWJsZTogYm9vbGVhblxyXG4gICAgdHJhbnNwYXJlbnQ6IGJvb2xlYW5cclxuICAgIG5hbWU6IHN0cmluZ1xyXG4gICAgaW1hZ2U6IHN0cmluZ1xyXG4gICAgcmVuZGVyRGF0YT86IFJlbmRlckRhdGFcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSZW5kZXJEYXRhIHtcclxuICAgIHRleHR1cmU6IGdmeC5UZXh0dXJlXHJcbiAgICB0ZXh0dXJlTGF5ZXI6IG51bWJlclxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVGhpbmcge1xyXG4gICAgcG9zaXRpb246IGdlby5Qb2ludFxyXG4gICAgcGFzc2FibGU6IGJvb2xlYW5cclxuICAgIHRyYW5zcGFyZW50OiBib29sZWFuXHJcbiAgICBuYW1lOiBzdHJpbmdcclxuICAgIGltYWdlOiBzdHJpbmdcclxuICAgIHJlbmRlckRhdGE6IFJlbmRlckRhdGEgfCB1bmRlZmluZWRcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBUaGluZ09wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uID0gb3B0aW9ucy5wb3NpdGlvblxyXG4gICAgICAgIHRoaXMucGFzc2FibGUgPSBvcHRpb25zLnBhc3NhYmxlXHJcbiAgICAgICAgdGhpcy50cmFuc3BhcmVudCA9IG9wdGlvbnMudHJhbnNwYXJlbnRcclxuICAgICAgICB0aGlzLm5hbWUgPSBvcHRpb25zLm5hbWVcclxuICAgICAgICB0aGlzLmltYWdlID0gb3B0aW9ucy5pbWFnZVxyXG5cclxuICAgICAgICBpZiAob3B0aW9ucy5yZW5kZXJEYXRhKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyRGF0YSA9IG9wdGlvbnMucmVuZGVyRGF0YVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjbG9uZSgpOiBUaGluZyB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBUaGluZyh7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uLmNsb25lKCksXHJcbiAgICAgICAgICAgIHBhc3NhYmxlOiB0aGlzLnBhc3NhYmxlLFxyXG4gICAgICAgICAgICB0cmFuc3BhcmVudDogdGhpcy50cmFuc3BhcmVudCxcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLFxyXG4gICAgICAgICAgICBpbWFnZTogdGhpcy5pbWFnZSxcclxuICAgICAgICAgICAgcmVuZGVyRGF0YTogT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5yZW5kZXJEYXRhKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUaWxlIGV4dGVuZHMgVGhpbmcgeyB9XHJcbmV4cG9ydCBjbGFzcyBGaXh0dXJlIGV4dGVuZHMgVGhpbmcgeyB9XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFBsYXllck9wdGlvbnMgZXh0ZW5kcyBUaGluZ09wdGlvbnMge1xyXG4gICAgbWF4SGVhbHRoOiBudW1iZXIsXHJcbiAgICBoZWFsdGg/OiBudW1iZXJcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBsYXllciBleHRlbmRzIFRoaW5nIHtcclxuICAgIHB1YmxpYyBtYXhIZWFsdGg6IG51bWJlciA9IDBcclxuICAgIHB1YmxpYyBoZWFsdGg6IG51bWJlciA9IDBcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBQbGF5ZXJPcHRpb25zKSB7XHJcbiAgICAgICAgc3VwZXIob3B0aW9ucylcclxuICAgICAgICB0aGlzLm1heEhlYWx0aCA9IG9wdGlvbnMubWF4SGVhbHRoXHJcbiAgICAgICAgdGhpcy5oZWFsdGggPSBvcHRpb25zLmhlYWx0aCA/PyB0aGlzLm1heEhlYWx0aFxyXG4gICAgfVxyXG59Il19